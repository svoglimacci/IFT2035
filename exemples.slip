;;; Quelques exemples.                  -*- mode: lisp-data; coding: utf-8 -*-

2                                       ; ↝ 2 : Tint
+                                   ; ↝ <function> : Tabs Tint (Tabs Tint Tint)

(+ 2 4)                                 ; ↝ 6 : Tint

( (: (λ x x)
        (Int -> Int))
    2)                             ; ↝ 2 : Tint

( ( (: (λ (x y) (* x y)) (Int Int -> Int))
            3)
      5)                                ; ↝ 15 : Tint


(let true false
  (if true 1 2))                       ; ↝ 2 : Tint

(ref! 5)                                ; ↝ ptr<0> : Tref Tint

(let c1 (ref! 5)
 (let c2 c1
  (begin (set! c2 6)
   (+ (get! c1) (get! c2)))))           ; ↝ 12 : Tint

(let c1 (ref! 1)
 (let c2 (ref! 2)
  (let c3 (ref! 3)
   (begin (set! c1 (+ 1 (get! c1)))
    (set! c2 (+ 1 (get! c2)))
     (set! c3 (+ 1 (get! c3)))
      (+ (get! c1) (+ (get! c2) (get! c3)))))))  ; ↝ 9 :Tint

(letrec ((c1 (ref! 1))(c2 (ref! 2))(c3 (ref! 3)))(+ (get! c1) (+ (get! c2)(get! c3)))); ↝ 6 : Tint



(letrec ((a +)
         (s -))
  (letrec ((+ 1)
           (- 2))
    (a + -)))                           ; ↝ 3 : Tint

(letrec ( ((odd (x Int)) Bool  (if (= x 1) true (even (- x 1))))
          ((even (x Int)) Bool (if (= x 0) true (odd (- x 1)))))
(odd 7))                                ; ↝ True : Tbool

(letrec ( ((fac (x Int)) Int  (if (< x 2) x (* x (fac (- x 1)))))) (fac 5))
                                        ; ↝ 120 : Tint



